{"version":3,"sources":["pages/history.js","pages/NotePopup.js","pages/Notes.js","pages/CreateUser.js","pages/LogIn.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","NotePopup","props","React","useState","notes","setNotes","_id","id","trigger","className","modal","close","onClick","title","type","value","onChange","e","target","preventDefault","axios","post","then","res","update","console","log","catch","err","alert","Notes","options","withCredentials","allNotes","setAllNotes","setTitle","setUserCounter","getNotes","get","data","useEffect","onSubmit","placeholder","map","note","i","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","h","textAlign","SignUp","classes","username","setUsername","password","setPassword","success","setSuccess","Container","component","maxWidth","CssBaseline","Typography","variant","noValidate","md5","Grid","container","item","xs","TextField","required","fullWidth","label","name","autoComplete","Button","color","justify","Link","href","SignIn","Avatar","Cookies","set","history","push","autoFocus","App","basename","path","CreateUser","Component","rest","render","to","exact","LogIn","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5684268.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from 'axios';\r\nimport '../styles/NotePopup.css';\r\n\r\nfunction NotePopup(props) {\r\n\r\n    const [notes, setNotes] = React.useState(props.notes);\r\n    const [id, setId] = React.useState(props._id);\r\n\r\n    return (\r\n        <Popup trigger={<button className=\"button\"> View </button>} modal>\r\n            {close => (\r\n                <div className=\"modal\">\r\n                    <a className=\"close\" onClick={close}>\r\n                        &times;\r\n        </a>\r\n                    <div className=\"header\"> {props.title} </div>\r\n                    <textarea type=\"text\" className=\"content\" value={notes} onChange={(e) => setNotes(e.target.value)} />\r\n\r\n                    <div className=\"actions\">\r\n                        <button\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                if(notes !== \"\"){\r\n\r\n                                    axios.post(\"https://notebe.herokuapp.com/note/editNotes\", {\r\n                                        id,\r\n                                        notes\r\n                                    }).then(res => {\r\n                                        props.update();\r\n                                        console.log(res);\r\n                                    }).catch(err => console.log(err));\r\n                                }\r\n                                else{\r\n                                    alert(\"no empty notes!\")\r\n                                }\r\n                                close();\r\n                            }}\r\n                        >\r\n                            \r\n                            submit edit\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                console.log(\"modal closed \");\r\n                                close();\r\n                            }}\r\n                        >\r\n                            \r\n                            close modal\r\n                         </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Popup>\r\n    );\r\n}\r\n\r\nexport default NotePopup;","import React from 'react';\r\nimport axios from 'axios';\r\nimport NotePopup from './NotePopup';\r\nimport '../styles/Notes.css';\r\nimport '../styles/NotePopup.css';\r\n\r\nconst Notes = (props) => {\r\n\r\n    const options = {\r\n        withCredentials: false\r\n    };\r\n\r\n    const [allNotes, setAllNotes] = React.useState([]);\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [notes, setNotes] = React.useState(\"\");\r\n    const [userCount, setUserCounter] = React.useState(\"\");\r\n\r\n    React.useEffect(getNotes, []);\r\n\r\n    function getNotes() {\r\n        axios.get('https://notebe.herokuapp.com/note/getAllNotes', options)\r\n            .then((res) => {\r\n                setAllNotes(res.data)\r\n            })\r\n            .catch(err => { console.log(err) });\r\n        axios.get('/note/getClient', options)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setUserCounter(res.data);\r\n            })\r\n            .catch(err => { console.log(err) });\r\n    }\r\n\r\n    const createNote = (e) => {\r\n        e.preventDefault();\r\n        if (title !== \"\" & notes !== \"\") {\r\n            axios.post(\"https://notebe.herokuapp.com/note/createNotes\", {\r\n                title,\r\n                notes\r\n            }, options).then(res => {\r\n                setTitle(\"\");\r\n                setNotes(\"\");\r\n                getNotes();\r\n                console.log(res);\r\n            }).catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    function NoteDisplay(props) {\r\n        return (\r\n            <div className=\"notes\">\r\n                {allNotes.map((note, i) => (\r\n                    <div className=\"container\">\r\n                        <div className=\"box\">\r\n                            <div className=\"text\">\r\n                                <h4>{note.title}</h4>\r\n                                <p>{note.notes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <NotePopup title={note.title} notes={note.notes} _id={note._id} update={getNotes} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"notepage\">\r\n            <header className=\"header\">\r\n                <h3 className=\"title\">\r\n                    React Note App\r\n                    <h4 className=\"subtitle\">\r\n                    </h4>\r\n                </h3>\r\n            </header>\r\n\r\n            <div className=\"bar\">\r\n\r\n                <form onSubmit={createNote}>\r\n                    <label> Title </label>\r\n                    <br />\r\n                    <input type=\"text\" value={title} placeholder=\"title\" onChange={(e) => setTitle(e.target.value)} />\r\n                    <br />\r\n                    <label> Notes </label>\r\n                    <br />\r\n                    <input type=\"text\" value={notes} placeholder=\"notes\" onChange={(e) => setNotes(e.target.value)} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <NoteDisplay />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport '../styles/CreateUser.css'\r\nimport md5 from 'md5'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    h: {\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [success, setSuccess] = React.useState('');\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n        if (username != 0 && password != 0) {\r\n            axios.post(\"https://notebe.herokuapp.com/createUsers\", {\r\n                username,\r\n                password: md5(password),\r\n            })\r\n                .then((res) => {\r\n                    setSuccess(res.data);\r\n                })\r\n                .catch(err => console.log(err));\r\n        } else {\r\n            setSuccess('Invalid. Please type in something.')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n          </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={createUser}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Username\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n            </Button>\r\n                        <h2 className={classes.h}>{success}</h2>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport history from './history';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport md5 from 'md5'\r\n\r\nconst options = {\r\n    withCredentials: false\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    function login(e) {\r\n        e.preventDefault();\r\n        const body = {\r\n            username,\r\n            password: md5(password),\r\n        }\r\n        axios.post('https://notebe.herokuapp.com/login', body, options)\r\n            .then((res) => {\r\n                setPassword(\"\");\r\n                if (res.data) {\r\n                    Cookies.set(\"username\", body.username);\r\n                    Cookies.set(\"password\", body.password);\r\n                    Cookies.set(\"isLoggedIn\", true);\r\n\r\n                } else {\r\n                    Cookies.set(\"username\", \"\");\r\n                    Cookies.set(\"password\", \"\");\r\n                    Cookies.set(\"isLoggedIn\", false);\r\n                }\r\n                console.log(res);\r\n            }).then(() => {\r\n                history.push(\"/noteFE/#/note\");\r\n            })\r\n            .catch(e => console.log(e));\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n        </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={login}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={e => setUsername(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n          </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"/noteFE/#/create\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { HashRouter, Switch ,Route , Redirect, Link} from \"react-router-dom\";\r\nimport history from './pages/history';\r\nimport Notes from './pages/Notes';\r\nimport CreateUser from './pages/CreateUser'\r\nimport LogIn from './pages/LogIn'\r\nimport Cookies from 'js-cookie'\r\n\r\nfunction App() {\r\n\r\n\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      Cookies.get(\"isLoggedIn\") == \"true\"\r\n        ? <Component {...props} />\r\n        : <Redirect to= {'/'} />\r\n    )} />\r\n  )\r\n\r\n\r\n  return (\r\n   <HashRouter basename='/noteFE/#/' history={history}>\r\n     <div>\r\n     <Switch>\r\n       <Route path= {\"/create\"} component={CreateUser}/>\r\n       <PrivateRoute path={'/note'} component={Notes} />\r\n       <Route exact path =\"/\" component={LogIn}/>\r\n     </Switch>\r\n     </div>\r\n   </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}